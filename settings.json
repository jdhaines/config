{
    // Git Bash

    "shellLauncher.shells.windows": [
        {
            "shell": "C:\\Windows\\System32\\cmd.exe",
            "label": "cmd32"
        },
        {
            "shell": "C:\\Windows\\SysWOW64\\cmd.exe",
            "label": "cmd64"
        },
        {
            "shell": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe",
            "label": "PowerShell"
        },
        {
            "shell": "D:\\ESEapps\\git\\2.24.1.2\\x64\\bin\\bash.exe",
            "label": "Bash"
        }
    ],
    // Command Prompt
    "git.path": "D:/ESE/cots/git/2.14.1/x64/cmd/git.exe",
    "python.disablePromptForFeatures": [
        "pylint"
    ],
    "editor.formatOnPaste": true,
    // "projectManager.sortList": "Recent",
    // "projectManager.groupList": true,
    "git.enableSmartCommit": true,
    "python.linting.pylintArgs": [
        "--disable=E1101, C0103, C0411, R0914, R0903, C0330, R0201",
        "--disable=W0622"
    ],
    "vscode_custom_css.imports": [
        "file: ///C:/Users/u1019077/Documents/synthwave84_glow.css"
    ],
    "vscode_custom_css.policy": true,
    "editor.rulers": [88],
    // The proxy setting to use. If not set will be taken from the http_proxy and https_proxy environment variables
    "http.proxy": "https://proxy.internet.rolls-royce.local:8080/",
    "git.autofetch": true,
    "gitlens.advanced.messages": {
        "suppressCommitHasNoPreviousCommitWarning": false,
        "suppressCommitNotFoundWarning": false,
        "suppressFileNotUnderSourceControlWarning": false,
        "suppressGitVersionWarning": false,
        "suppressLineUncommittedWarning": false,
        "suppressNoRepositoryWarning": false,
        "suppressResultsExplorerNotice": true
    },
    "gitlens.codeLens.scopes": [
        "document",
        "containers"
    ],
    "gitlens.codeLens.enabled": false,
    "gitlens.hovers.currentLine.over": "line",
    "gitlens.recentChanges.highlight.locations": [
        "gutter",
        "line",
        "overview"
    ],
    "gitlens.statusBar.enabled": false,
    "explorer.confirmDragAndDrop": false,
    "explorer.confirmDelete": false,
    "[markdown]": {
        
    },
    "cSpell.userWords": [
        "",
        "Agiven",
        "Belcan",
        "Bmax",
        "Bmin",
        "Borre",
        "Burkholder",
        "CFBU",
        "Cust",
        "Engr's",
        "Engrg",
        "Haines",
        "NONCONF",
        "Purch",
        "REQD",
        "SPADL",
        "TFNHAN",
        "Wrmax",
        "Wrmin",
        "Wrminbest",
        "Xgiven",
        "Zmin",
        "accessible",
        "accreditations",
        "amax",
        "and",
        "aneatria",
        "ankeet",
        "anom",
        "apexcharts",
        "app",
        "are",
        "atlassian",
        "authentication",
        "birdwell",
        "block",
        "burndown",
        "c",
        "cardsummary",
        "chavis",
        "chinmai",
        "cloneid",
        "cloneme",
        "cmmc",
        "code",
        "codehilite",
        "combustors",
        "commiting",
        "complete",
        "components",
        "concessed",
        "conda",
        "conformances",
        "connections",
        "containerizaion",
        "costcenters",
        "cybersecurity",
        "ddap",
        "def",
        "detect",
        "devhopper",
        "devops",
        "dfars",
        "dietz",
        "dimensionalized",
        "directus",
        "dispositioned",
        "documents",
        "dotfiles",
        "dummies",
        "eccn",
        "eccns",
        "email",
        "endblock",
        "env",
        "esnext",
        "establish",
        "executables",
        "external",
        "favicon",
        "ffrdc",
        "fmax",
        "fmin",
        "for",
        "from",
        "fullhuman",
        "g",
        "gaby",
        "gettingstarted",
        "git",
        "gitlab",
        "gmax",
        "gmin",
        "harter",
        "hmin",
        "iloc",
        "implement",
        "inplace",
        "input",
        "installable",
        "internal",
        "is",
        "isclose",
        "javascripts",
        "jira",
        "jsongen",
        "jsonify",
        "jupyter",
        "knowledgebase",
        "kroneman",
        "kube",
        "kubernetes",
        "kunkel",
        "labelhere",
        "lalchemy",
        "lheureau",
        "lifecycle",
        "linenums",
        "lmax",
        "lmin",
        "logically",
        "macbook",
        "maintenance",
        "malicious",
        "mgmt",
        "microprograms",
        "mithril",
        "mitigations",
        "mkdocs",
        "monokai",
        "multifactor",
        "mutationobserver",
        "nadcap",
        "network",
        "networks",
        "new",
        "nightwatch",
        "noclasses",
        "nonlocal",
        "object",
        "or",
        "oring",
        "ousd",
        "pauga",
        "physically",
        "pipenv",
        "pipfile",
        "poah",
        "portainer",
        "postive",
        "potentially",
        "preloadvtorque",
        "productionize",
        "progammers",
        "projecttypes",
        "publicly",
        "purgecss",
        "pydantic",
        "pygments",
        "pymdownx",
        "pytest",
        "randjelovic",
        "require",
        "results",
        "rmax",
        "rmin",
        "roadmap",
        "rotatives",
        "rrblue",
        "rrecs",
        "rrgreen",
        "rrgrey",
        "rrms",
        "rrorange",
        "rrpink",
        "rrpurple",
        "rrteal",
        "sandboxing",
        "schwering",
        "separated",
        "serialnumbers",
        "sessions",
        "sfdocs",
        "shim",
        "smes",
        "spammy",
        "sq",
        "sqcdp",
        "sqlalchemy",
        "sscd",
        "strftime",
        "strptime",
        "stylesheets",
        "subfolder",
        "subnetworks",
        "such",
        "superlink",
        "symantic",
        "system",
        "tailf",
        "tailwindcss",
        "teamcenter",
        "terminate",
        "that",
        "tibbs",
        "timeframe",
        "to",
        "tododisp",
        "townhall",
        "traceabilty",
        "traefik",
        "trivedi",
        "type",
        "u",
        "urql",
        "uscdz",
        "users",
        "utilize",
        "vals",
        "venv",
        "via",
        "vnode",
        "vuex",
        "when",
        "wkhtmltopdf",
        "wmax",
        "wmin",
        "workspace",
        "wtforms",
        "xmax",
        "xmin",
        "xnom",
        "xwiki",
        "y"
    ],
    "workbench.colorTheme": "Solarized Dark",
    "workbench.activityBar.visible": true,
    "editor.fontFamily": "Hack, Consolas, 'Courier New', monospace",
    "terminal.integrated.fontFamily": "monospace",
    "editor.fontSize": 13,
    "emmet.syntaxProfiles": {
    
    },
    "emmet.excludeLanguages": [],
    "emmet.includeLanguages": {
        "markdown": "html"
    },
    "emmet.triggerExpansionOnTab": true,
    "python.dataScience.sendSelectionToInteractiveWindow": false,
    "eslint.format.enable": true,
    "editor.codeActionsOnSave": {
        "source.fixAll.eslint": true
    },
    "eslint.workingDirectories": [
        "./src/ui"
    ],
    "terminal.integrated.shell.windows": "D:\\ESEapps\\git\\2.24.1.2\\x64\\bin\\bash.exe",
    "[json]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[javascript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "workbench.iconTheme": "Monokai Pro Icons",
    "[vue]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },

    // Vim Settings

    "vim.easymotion": true,
    "vim.useSystemClipboard": true,
    "vim.useCtrlKeys": true,
    "vim.surround": true,
    "vim.leader": ",",
    "vim.easymotionMarkerFontSize": "18",
    "vim.easymotionMarkerForegroundColorOneChar": "red",
    "vim.easymotionMarkerForegroundColorTwoChar": "red",
    "editor.lineNumbers": "relative",
    "vim.sneak": false,
    "vim.incsearch": true,
    // Insert Mode
    "vim.insertModeKeyBindings": [
        // In insert mode jj to escape
        {
            "before": ["j", "j"],
            "after": ["<Esc>"]
        }
    ],
    // Visual Mode
    "vim.visualModeKeyBindings": [
        // In visual mode i goes to insert mode
        {
            "before": ["i"],
            "after": ["<Esc>", "i"]
        }
    ],
    // Escaping from vim for below commands
    "vim.handleKeys": {
        // Select all
        "<C-a>": false,
        // VS Code search in file
        "<C-f>": false,
        // VS Code new marker @ next occurence 
        // "<C-d>": false,
        // Copy 
        "<C-c>": false,
        // Cut
        "<C-x>": false,
        // Paste
        "<C-v>": false,
        // Close Editor
        "<C-w>": true,
        // Toggle Fold
        "<C-k>": false,
        "<C-l>": false,
        //Replace
        "<C-h>": false
    },
    "javascript.updateImportsOnFileMove.enabled": "always",
    "typescript.updateImportsOnFileMove.enabled": "always",
    "tabnine.experimentalAutoImports": true,
    "tabnine.disable_file_regex": [
    
    ]
}
